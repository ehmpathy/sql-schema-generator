{
  "name": "sql-schema-generator",
  "version": "0.21.2",
  "description": "Declarative relational database sql schema generator. Ensure best practices are followed and abstract away boiler plate sql.",
  "author": "UladKasach @uladkasach",
  "license": "MIT",
  "repository": "uladkasach/sql-schema-generator",
  "homepage": "https://github.com/uladkasach/sql-schema-generator",
  "keywords": [
    "database",
    "schema",
    "dont-repeat-yourself",
    "sql",
    "postgres",
    "postgresql",
    "insert-only",
    "domain-driven-design",
    "temporal-database-design"
  ],
  "bugs": "https://github.com/uladkasach/sql-schema-generator/issues",
  "main": "dist/contract/module.js",
  "bin": {
    "sql-schema-generator": "./bin/run"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "/bin",
    "/dist",
    "/schema"
  ],
  "oclif": {
    "commands": "./dist/contract/commands",
    "bin": "sql-schema-generator",
    "plugins": [
      "@oclif/plugin-help"
    ]
  },
  "scripts": {
    "generate:cli-readme": "npm run build && oclif-dev readme",
    "format": "prettier --parser typescript --write 'src/**/*.ts' --config ./prettier.config.js",
    "build:ts": "tsc -p ./tsconfig.build.json",
    "build": "rm -rf ./dist && npm run build:ts",
    "provision:docker:down": "docker-compose -f ./provision/docker/integration_test_db/docker-compose.yml down",
    "provision:docker:up": "docker-compose -f ./provision/docker/integration_test_db/docker-compose.yml up -d --force-recreate --build --renew-anon-volumes",
    "provision:docker:await": "docker-compose -f ./provision/docker/integration_test_db/docker-compose.yml exec -T postgres /root/wait-for-postgres.sh",
    "provision:docker:extensions": "docker-compose -f ./provision/docker/integration_test_db/docker-compose.yml exec -T postgres /root/provision-extensions.sh",
    "provision:integration-test-db": "npm run provision:docker:up && npm run provision:docker:await && npm run provision:docker:extensions",
    "test:types": "tsc --noEmit",
    "test:format": "prettier --parser typescript --check 'src/**/*.ts' --config ./prettier.config.js",
    "test:lint": "tslint -c tslint.json -p tsconfig.json",
    "test:unit": "TZ=UTC jest --forceExit --coverage --verbose",
    "test:integration": "TZ=UTC jest -c ./jest.integration.config.js --forceExit --coverage --verbose --runInBand",
    "test": "npm run test:types && npm run test:format && npm run test:lint && npm run test:unit && npm run test:integration",
    "preversion": "npm run test && npm run build",
    "postversion": "git push origin master --tags --no-verify",
    "prepublish": "npm run build"
  },
  "devDependencies": {
    "@oclif/dev-cli": "1.22.2",
    "@types/diff": "4.0.2",
    "@types/dotenv": "6.1.1",
    "@types/indent-string": "4.0.1",
    "@types/jest": "26.0.3",
    "@types/joi": "17.2.3",
    "@types/listr": "0.14.0",
    "@types/pg": "7.14.3",
    "@types/sql-formatter": "2.3.0",
    "@types/uuid": "3.4.4",
    "@types/yesql": "3.2.1",
    "husky": "1.3.1",
    "jest": "26.1.0",
    "pg": "8.2.1",
    "prettier": "1.19.1",
    "simple-sha256": "1.0.0",
    "sql-formatter": "2.3.3",
    "stdout-stderr": "0.1.9",
    "ts-jest": "26.1.1",
    "tslint": "5.11.0",
    "tslint-config-airbnb": "5.11.0",
    "tslint-consistent-codestyle": "1.13.3",
    "typescript": "3.9.5",
    "uuid": "3.3.2",
    "yesql": "3.2.2"
  },
  "dependencies": {
    "@oclif/command": "1.6.1",
    "@oclif/config": "1.15.1",
    "@oclif/plugin-help": "3.1.0",
    "chalk": "2.4.2",
    "diff": "4.0.1",
    "domain-objects": "0.7.2",
    "indent-string": "4.0.0",
    "joi": "17.4.2",
    "listr": "0.14.3",
    "oclif": "1.16.1",
    "simple-type-guards": "0.1.3",
    "ts-node": "8.3.0",
    "yaml": "1.6.0"
  }
}
